---
# ansible-playbook -i ./hosts rprj.yml

- hosts: all
  become: yes
  become_user: root

  tasks:
  #- debug: var=ansible_facts
  - name: Upgrade System
    apt:
      update_cache: yes
      upgrade: yes
      autoclean: yes
      autoremove: yes
    notify:
    - Restart Server

  handlers:
  - name: Restart Server
    become: yes
    become_user: root
    command: shutdown -r now


- hosts: R-Prj
  become: yes
  become_user: root
  vars:
    git_dir: /opt/rprj
    www_dir: /var/www/rprj
    db_host: localhost
    db_name: rproject
    db_user: rprj
    db_password: mysecretpass
    db_root_password: rprjrootpwd
    dbpkg: mariadb-server
    #dbpkg: mysql-server

  tasks:

  - name: Install Packages
    apt:
      name:
      - "{{ dbpkg }}"
      - php
      - php-mysql
      - python-pymysql
      - python-selinux

  - name: Enable Apache Modules
    apache2_module:
      state: present
      name: ssl

  - name: Ensure mysql is running
    service:
      name: mysql
      state: started

  - name: Ensure apache2 is running
    service:
      name: apache2
      state: started

  - name: Create DB
    mysql_db:
      login_unix_socket: /var/run/mysqld/mysqld.sock
      name: "{{ db_name }}"
      state: present
    register: db_updated

  - name: update db user password
    mysql_user:
      login_unix_socket: /var/run/mysqld/mysqld.sock
      host: "{{ item }}"
      name: "{{ db_user }}"
      password: "{{ db_password }}"
      check_implicit_admin: yes
      priv: "*.*:ALL,GRANT"
      state: present
    with_items:
      - "{{ db_name }}"
      - localhost
      #- "{{ ansible_hostname }}"
      #- 127.0.0.1
      #- ::1
    register: db_updated

  #- name: update db root password
    #mysql_user:
      #login_unix_socket: /var/run/mysqld/mysqld.sock
      #host: "{{ item }}"
      #name: root
      #password: "{{ db_root_password }}"
      #check_implicit_admin: yes
      #priv: "*.*:ALL,GRANT"
      #state: present
    #with_items:
      #- "{{ db_name }}"
      #- "{{ ansible_hostname }}"
      #- 127.0.0.1
      #- ::1
      #- localhost
    #register: db_updated

  - name: Restart Apache Service if git changed
    service:
      name: mysql
      state: restarted
    when: db_updated.changed

  - name: GIT clone and update
    git:
      repo: https://git.code.sf.net/p/r-prj/gitcode
      dest: "{{ git_dir }}"
      version: master
    register: git_updated
  #- debug: "msg={{ git_updated.changed }}"

  - name: Remove default site
    file:
      path: /etc/apache2/sites-enabled/000-default.conf
      state: absent

  - name: Copy apache config if git changed
    copy:
      src: templates/rprj.conf
      dest: /etc/apache2/sites-available/rprj.conf
    when: git_updated.changed

  - name: Copy apache SSL config if git changed
    copy:
      src: templates/ssl_rprj.conf
      dest: /etc/apache2/sites-available/ssl_rprj.conf
    when: git_updated.changed

  - name: Link default default site
    file:
      src: /etc/apache2/sites-available/rprj.conf
      dest: /etc/apache2/sites-enabled/rprj.conf
      state: link
    when: git_updated.changed
    notify: Restart Apache Service

  - name: Link default default SSL site
    file:
      src: /etc/apache2/sites-available/ssl_rprj.conf
      dest: /etc/apache2/sites-enabled/ssl_rprj.conf
      state: link
    when: git_updated.changed
    notify: Restart Apache Service

  - name: Create a directory if it does not exist
    file:
      path: "{{ www_dir }}"
      state: directory
      mode: '0755'

  - name: Copy the PHP sources
    command:
      cmd: "cp -R {{ git_dir }}/php/ {{ www_dir }}/"
    when: git_updated.changed

  #- name: Copy config_local.php
    #command:
      #cmd: "cp {{ git_dir }}/php/config_local.php {{ www_dir }}/php/"
    #when: git_updated.changed or db_updated.changed

  - name: config_local.php - server name
    command:
      cmd: "sed -i 's/db_server = \".*\"/db_server = \"{{ db_host }}\"/g' {{ www_dir }}/php/config_local.php"
    when: git_updated.changed or db_updated.changed

  - name: config_local.php - mysql user name
    command:
      cmd: "sed -i 's/db_user = \".*\"/db_user = \"{{ db_user }}\"/g' {{ www_dir }}/php/config_local.php"
    when: git_updated.changed or db_updated.changed

  - name: config_local.php - mysql user password
    command:
      cmd: "sed -i 's/db_pwd = \".*\"/db_pwd = \"{{ db_password }}\"/g' {{ www_dir }}/php/config_local.php"
    when: git_updated.changed or db_updated.changed

  - name: Create a directory if it does not exist
    file:
      path: "{{ www_dir }}/php/files"
      state: directory
      mode: '0755'
      owner: www-data
      group: www-data

  - name: Link files dir in mng folder
    file:
      src: "{{ www_dir }}/php/files"
      dest: "{{ www_dir }}/php/mng/files"
      state: link

  - name: Restart Apache Service if git changed
    service:
      name: apache2
      state: restarted
    #when: git_updated.changed

  handlers:

  - name: Restart Apache Service
    service:
      name: apache2
      state: restarted
